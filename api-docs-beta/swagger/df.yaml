x-generated: Automatically generated by CDP protoc plugin. Do not edit manually.
swagger: '2.0'
x-endpoint-name: df
x-products: CDP
x-form-factors: public
x-cdp-releases: BETA
info:
  version: 0.9.35 (BETA)
  title: Cloudera DataFlow Environment Service
  license:
    name: Apache 2.0
  description: Manage DataFlow Environments.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/df/deleteEnvironment:
    post:
      summary: Deletes all references to an environment. Only not-enabled environments can be deleted.
      description: Deletes all references to an environment. Only not-enabled environments can be deleted.
      operationId: deleteEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/disableEnvironment:
    post:
      summary: Disable environment.
      description: Disable environment.
      operationId: disableEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DisableEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/enableEnvironment:
    post:
      summary: Enable environment.
      description: Enable environment.
      operationId: enableEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/EnableEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/getActiveAlertsForDeployment:
    post:
      summary: Get active alerts for deployment.
      description: Get active alerts for deployment.
      operationId: getActiveAlertsForDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetActiveAlertsForDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetActiveAlertsForDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getActiveAlertsForEnvironment:
    post:
      summary: Get active alerts for environment.
      description: Get active alerts for environment.
      operationId: getActiveAlertsForEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetActiveAlertsForEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetActiveAlertsForEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getDeployment:
    post:
      summary: Get deployment.
      description: Gets a deployment
      operationId: getDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getDeploymentKPIs:
    post:
      summary: Get deployment KPIs.
      description: Gets deployment KPIs.
      operationId: getDeploymentKPIs
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentKPIsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentKPIsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getDeploymentSystemMetrics:
    post:
      summary: Get deployment System metrics.
      description: Get deployment System metrics.
      operationId: getDeploymentSystemMetrics
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentSystemMetricsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetDeploymentSystemMetricsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getEnvironment:
    post:
      summary: Get environment.
      description: Gets environment.
      operationId: getEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getEventDetailForDeployment:
    post:
      summary: Get event detail for deployment.
      description: Gets event detail for deployment.
      operationId: getEventDetailForDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventDetailForDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEventDetailForDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getEventDetailForEnvironment:
    post:
      summary: Get event history detail for environment.
      description: Get event history detail for environment.
      operationId: getEventDetailForEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventDetailForEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEventDetailForEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getEventHistoryForDeployment:
    post:
      summary: Get event history for deployment.
      description: Gets event history for deployment.
      operationId: getEventHistoryForDeployment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventHistoryForDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEventHistoryForDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getEventHistoryForEnvironment:
    post:
      summary: Get event history for environment.
      description: Get event history for environment.
      operationId: getEventHistoryForEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventHistoryForEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEventHistoryForEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getFilterOptions:
    post:
      summary: Get filter options.
      description: Gets filter options.
      operationId: getFilterOptions
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFilterOptionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFilterOptionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getNotifications:
    post:
      summary: Get notifications.
      description: Gets notifications.
      operationId: getNotifications
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetNotificationsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetNotificationsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/getUserKubernetesAccessList:
    post:
      summary: Get access list for the remote user to the environment's cluster.
      description: Gets access list for the remote user to the environment's cluster.
      operationId: getUserKubernetesAccessList
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUserKubernetesAccessListRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetUserKubernetesAccessListResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/grantUserKubernetesAccess:
    post:
      summary: Grant remote user access to the environment's cluster.
      description: Grants remote user access to the environment's cluster.
      operationId: grantUserKubernetesAccess
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GrantUserKubernetesAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GrantUserKubernetesAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/listDeployments:
    post:
      summary: List deployments.
      description: Lists deployments.
      operationId: listDeployments
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/listEnvironments:
    post:
      summary: List environments.
      description: Lists environments.
      operationId: listEnvironments
      x-entitlement: DFX
      x-paging-default-max-items: 20
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEnvironmentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListEnvironmentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/listTargetEnvironmentsForNewDeployments:
    post:
      summary: List environments that a DataFlow Admin can deploy to.
      description: List environments that a DataFlow Admin can deploy to.
      operationId: listTargetEnvironmentsForNewDeployments
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTargetEnvironmentsForNewDeploymentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListTargetEnvironmentsForNewDeploymentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/df/revokeUserKubernetesAccess:
    post:
      summary: Revoke access for the remote user from the environment's cluster.
      description: Revokes access for the remote user from the environment's cluster.
      operationId: revokeUserKubernetesAccess
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RevokeUserKubernetesAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RevokeUserKubernetesAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/df/updateEnvironment:
    post:
      summary: Update environment.
      description: Update environment.
      operationId: updateEnvironment
      x-entitlement: DFX
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  EnvironmentMeta:
    type: object
    description: Metadata about an environment
    required:
      - crn
      - name
      - cloudProvider
      - region
    properties:
      crn:
        type: string
        description: The crn of the environment
      name:
        type: string
        description: the name of the environment
      cloudProvider:
        type: string
        description: the cloud provider
      region:
        type: string
        description: the region within the cloud provider
  EventSummary:
    type: object
    description: An event summary
    required:
      - crn
      - name
      - severity
      - firstOccurrence
      - eventType
    properties:
      crn:
        type: string
        description: The CRN of the event
      name:
        type: string
        description: Name of the event
      severity:
        type: string
        description: The severity of the event
      firstOccurrence:
        type: integer
        format: int64
        description: Timestamp of the first occurrence of this event
      eventType:
        type: string
        description: The type of event that occurred
      alertType:
        type: string
        description: Optional value for alerts
  Event:
    type: object
    description: An event
    required:
      - crn
      - name
      - severity
      - eventType
      - firstOccurrence
      - referenceType
    properties:
      crn:
        type: string
        description: The CRN of the event
      name:
        type: string
        description: Name of the event
      severity:
        type: string
        description: The severity of the event
      eventType:
        type: string
        description: The type of event that occurred
      firstOccurrence:
        type: integer
        format: int64
        description: Timestamp of the first occurrence of this event
      referenceType:
        type: string
        description: Type of component that is identified by the referenceId.
      lastOccurrence:
        type: integer
        format: int64
        description: Timestamp of the last occurrence of this event
      description:
        type: string
        description: Description of the event
      userName:
        type: string
        description: The user associated with creating the event. Null for user-agnostic events.
      eventValue:
        type: number
        format: double
        description: Optional value of the event when it was triggered
      lowerThreshold:
        type: number
        format: double
        description: Optional value of the low end of the threshold that defines the event triggering condition
      upperThreshold:
        type: number
        format: double
        description: Optional value of the high end of the threshold that defines the event triggering condition
      timeToleranceMillis:
        type: integer
        format: int64
        description: Optional number of milliseconds tolerated outside the threshold bounds before the event is triggered
      lowerThresholdUnit:
        type: string
        description: Optional value of the units for the lower bound of the threshold
      upperThresholdUnit:
        type: string
        description: Optional value of the units for the upper bound of the threshold
      alertType:
        type: string
        description: Optional value for alerts
  DeploymentStatus:
    type: object
    description: The status of a deployment
    required:
      - detailedState
      - message
      - state
    properties:
      detailedState:
        type: string
        description: The detailed state that the deployment is currently in
      message:
        type: string
        description: Detail message relating to the current status of the deployment
      state:
        type: string
        description: The state that the deployment is currently in
  DeploymentSummary:
    type: object
    description: A deployment summary
    required:
      - crn
      - name
      - status
      - environment
      - updated
    properties:
      crn:
        type: string
        description: The deployment CRN
      name:
        type: string
        description: The deployment name
      status:
        description: The deployment status
        $ref: '#/definitions/DeploymentStatus'
      environment:
        description: The environment information of the deployment
        $ref: '#/definitions/EnvironmentMeta'
      updated:
        type: integer
        format: int64
        description: Timestamp of the last time the deployment was modified
      dataSents:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: The dataSent values
      dataReceiveds:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: The dataReceived values
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
  Deployment:
    type: object
    description: A deployment
    required:
      - crn
      - name
      - status
      - environment
      - updated
      - clusterSize
      - flowVersionCrn
    properties:
      crn:
        type: string
        description: The deployment CRN
      name:
        type: string
        description: The deployment name
      status:
        description: The deployment status
        $ref: '#/definitions/DeploymentStatus'
      environment:
        description: The environment information of the deployment
        $ref: '#/definitions/EnvironmentMeta'
      updated:
        type: integer
        format: int64
        description: Timestamp of the last time the deployment was modified
      clusterSize:
        type: string
        description: The initial size of the deployment
      flowVersionCrn:
        type: string
        description: The deployment's current flow version CRN
      nifiUrl:
        type: string
        description: The url to open the deployed flow in NiFi
      autoscaleMaxNodes:
        type: integer
        format: int32
        description: The maximum number of nodes that the deployment can scale up to, or null if autoscaling is not enabled for this deployment
      flowName:
        type: string
        description: The name of the flow
      flowVersion:
        type: integer
        format: int32
        description: The version of the flow
      currentNodeCount:
        type: integer
        format: int32
        description: The current node count
      deployedByCrn:
        type: string
        description: The actor CRN of the person who deployed the flow
      deployedByName:
        type: string
        description: The name of the person who deployed the flow
      autoscalingEnabled:
        type: boolean
        description: Whether or not to autoscale the deployment.
      autoscaleMinNodes:
        type: integer
        format: int32
        description: The minimum number of nodes that the deployment will allocate. May only be specified when autoscalingEnabled is true.
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      staticNodeCount:
        type: integer
        format: int32
        description: The static number of nodes that the deployment will allocate. May only be specified when autoscalingEnabled is false.
      dfxLocalUrl:
        type: string
        description: Base URL to the dfx-local instance running this deployment
  FilterOption:
    type: object
    description: A filter option
    required:
      - identifier
      - label
    properties:
      identifier:
        type: string
        description: The filter identifier
      label:
        type: string
        description: The filter label
      iconClass:
        type: string
        description: The icon class
  GetFilterOptionsRequest:
    type: object
    description: A request to get filter options
    required:
      - filterType
    properties:
      filterType:
        type: string
        description: The type of filter
  GetFilterOptionsResponse:
    type: object
    description: A response to get filter options
    properties:
      filterOptions:
        type: array
        items:
          $ref: '#/definitions/FilterOption'
        description: The filter options
  ListDeploymentsRequest:
    type: object
    description: A request to list deployments
    properties:
      pageSize:
        type: integer
        format: int32
        minimum: 20
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      pageToken:
        type: string
        x-paging-input-token: true
        description: The page token.
      metricsTimePeriod:
        type: string
        description: The metrics time period
      sorts:
        type: array
        items:
          type: string
        description: The sort criteria
      filters:
        type: array
        items:
          type: string
        description: The filter criteria
  ListDeploymentsResponse:
    type: object
    description: A response from listing deployments
    properties:
      nextPageToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
      deployments:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/DeploymentSummary'
        description: The listing of deployments in this page
  GetDeploymentRequest:
    type: object
    description: A request to get a deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
  GetDeploymentResponse:
    type: object
    description: A response to get a deployment
    properties:
      deployment:
        description: The deployment
        $ref: '#/definitions/Deployment'
  GetDeploymentKPIsRequest:
    type: object
    description: A request to get deployment KPIs
    required:
      - deploymentCrn
      - metricsTimePeriod
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      metricsTimePeriod:
        type: string
        description: The metrics time period
  GetDeploymentKPIsResponse:
    type: object
    description: A response to get deployment KPIs
    properties:
      metricCharts:
        type: array
        items:
          $ref: '#/definitions/MetricChart'
        description: The metrics for the configured KPIs
  GetDeploymentSystemMetricsRequest:
    type: object
    description: A request to get deployment system metrics
    required:
      - deploymentCrn
      - metricsTimePeriod
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      metricsTimePeriod:
        type: string
        description: The metrics time period
  GetDeploymentSystemMetricsResponse:
    type: object
    description: A response to get deployment system metrics
    properties:
      metricCharts:
        type: array
        items:
          $ref: '#/definitions/MetricChart'
        description: The metrics for the configured KPIs
  GetActiveAlertsForDeploymentRequest:
    type: object
    description: A request to get active alerts for deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      sort:
        type: string
        description: Sort criteria
  GetActiveAlertsForDeploymentResponse:
    type: object
    description: A response to get active alerts for deployment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified deployment
  GetEventHistoryForDeploymentRequest:
    type: object
    description: A request to get event history for deployment
    required:
      - deploymentCrn
    properties:
      deploymentCrn:
        type: string
        description: The deployment CRN
      rows:
        type: integer
        format: int32
        description: Max number of rows to return
      timestampFrom:
        type: integer
        format: int64
        description: Timestamp from when to get events prior
      filters:
        type: array
        items:
          type: string
        description: Filter criteria
  GetEventHistoryForDeploymentResponse:
    type: object
    description: A response to get event history for deployment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events
  GetEventDetailForDeploymentRequest:
    type: object
    description: A request to get event details for development
    required:
      - deploymentCrn
      - eventCrn
    properties:
      deploymentCrn:
        type: string
        description: The CRN of the deployment
      eventCrn:
        type: string
        description: The CRN of the event
  GetEventDetailForDeploymentResponse:
    type: object
    description: A response to get event details for development
    properties:
      eventDetail:
        description: The event details
        $ref: '#/definitions/EventDetail'
  EventDetail:
    type: object
    description: Event details
    properties:
      event:
        description: The event
        $ref: '#/definitions/Event'
      metricSummary:
        description: the metric summary
        $ref: '#/definitions/MetricSummary'
  MetricValue:
    type: object
    description: A metric value
    required:
      - timestamp
      - value
    properties:
      timestamp:
        type: integer
        format: int64
        description: The timestamp of this data point
      value:
        type: number
        format: double
        description: The value of this data point
  MetricChartData:
    type: object
    description: Chart data of metrics
    required:
      - average
      - currentValue
      - currentValueLabel
      - averageValueLabel
      - tooltipValueLabel
    properties:
      average:
        type: number
        format: double
        description: The average value of the data
      currentValue:
        type: number
        format: double
        description: The most recent value in the list of data points
      currentValueLabel:
        type: string
        description: The current value label
      averageValueLabel:
        type: string
        description: The average value label
      tooltipValueLabel:
        type: string
        description: The tooltip value label
      datas:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: The list of data points (in time-order) for the metric
  MetricChartFrequencyTolerance:
    type: object
    description: Frequency tolerance for a metric chart
    required:
      - unit
      - value
    properties:
      unit:
        type: string
        description: The unit of time controlling how long a metric value can persist outside its boundaries before an alert is generated
      value:
        type: number
        format: double
        description: The amount of time, associated with the given unit, a metric value can persist outside its boundaries before an alert is generated
  MetricChartAlert:
    type: object
    description: Thresholds associated with a metric
    required:
      - frequencyTolerance
    properties:
      frequencyTolerance:
        description: The unit of time controlling how long a metric value can persist outside its boundaries before an alert is generated
        $ref: '#/definitions/MetricChartFrequencyTolerance'
      thresholdMoreThan:
        type: number
        format: double
        description: The moreThan threshold for the alert
      thresholdLessThan:
        type: number
        format: double
        description: The lessThan threshold for the alert
  MetricChart:
    type: object
    description: A metric chart
    required:
      - name
      - unitType
      - componentType
      - metrics
      - mirroredMetrics
      - alert
    properties:
      name:
        type: string
        description: The name of the metric
      unitType:
        type: string
        description: The unit type of the metric
      componentType:
        type: string
        description: The component type of the metric
      metrics:
        description: The chart metrics
        $ref: '#/definitions/MetricChartData'
      mirroredMetrics:
        description: The optional mirrored metrics that only exist for certain system metrics
        $ref: '#/definitions/MetricChartData'
      alert:
        description: The optional thresholds associated with the alert on a metric
        $ref: '#/definitions/MetricChartAlert'
      componentName:
        type: string
        description: The scope component name that will exist for Processor, Process Group, and Connection metrics.
  MetricUnit:
    type: object
    description: Metric unit
    required:
      - id
      - name
      - displayLabel
    properties:
      id:
        type: string
        description: Id of the metric unit
      name:
        type: string
        description: Name of the unit
      displayLabel:
        type: string
        description: display label for the unit
      abbreviation:
        type: string
        description: abbreviation used for this unit
      ordinal:
        type: integer
        format: int32
        description: ordinal used when positioning the unit in a list (sort order)
      conversionValue:
        type: integer
        format: int64
        description: conversion value to use when converting between units
      metricUnitType:
        type: string
        description: type of unit (DURATION, RATIO, SIZE, RATE, COUNT)
  AlertCondition:
    type: object
    description: Alert condition
    required:
      - id
      - alertOperator
      - value
      - unit
    properties:
      id:
        type: string
        description: Id of the alert condition
      alertOperator:
        type: string
        description: Operator for the condition
      value:
        type: number
        format: double
        description: Value used to for evaluation of this condition
      unit:
        description: unit of measurement for the value
        $ref: '#/definitions/MetricUnit'
  AlertFrequencyUnit:
    type: object
    description: Alert frequency unit
    required:
      - id
      - label
      - abbreviation
    properties:
      id:
        type: string
        description: Id of alert frequency unit
      label:
        type: string
        description: Label of the unit
      abbreviation:
        type: string
        description: Abbreviation used for this unit
  MetricSummary:
    type: object
    description: Metric summary
    required:
      - name
      - label
    properties:
      name:
        type: string
        description: The name of the metric
      label:
        type: string
        description: The label of the metric
      description:
        type: string
        description: The description of the metric
      unitType:
        type: string
        description: The unit type of the metric
      componentType:
        type: string
        description: The component type of the metric
      componentName:
        type: string
        description: The scope component name that will exist for Processor, Process Group, and Connection metrics.
      componentId:
        type: string
        description: Id of the component monitored
      values:
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        description: Values for the metric
      displayContext:
        type: string
        description: Display context of the metric
      upperBoundCondition:
        description: Upper boundary condition
        $ref: '#/definitions/AlertCondition'
      lowerBoundCondition:
        description: Lower boundary condition
        $ref: '#/definitions/AlertCondition'
      alertFrequencyValue:
        type: number
        format: double
        description: Frequency value
      alertFrequencyUnit:
        description: Units of frequency
        $ref: '#/definitions/AlertFrequencyUnit'
  EnvironmentStatus:
    type: object
    description: The status of a DataFlow enabled environment.
    required:
      - state
    properties:
      state:
        type: string
        description: The state of the environment.
      message:
        type: string
        description: A status message for the environment.
  EnvironmentSummary:
    type: object
    description: The summarized DataFlow view of a CDP environment
    required:
      - crn
      - name
      - cloudPlatform
      - region
      - deploymentCount
      - maxK8sNodeCount
      - status
    properties:
      crn:
        type: string
        description: The environment CRN.
      name:
        type: string
        description: The environment name.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment.
      region:
        type: string
        description: The region of the environment.
      deploymentCount:
        type: integer
        format: int32
        description: The deployment count.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that environment may scale up under high-demand situations
      status:
        description: The DataFlow status of the environment.
        $ref: '#/definitions/EnvironmentStatus'
      k8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently in use by DataFlow for this environment.
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      clusterId:
        type: string
        description: Cluster id of the environment, if enabled
      instanceType:
        type: string
        description: The instance type of the kubernetes nodes currently in use by DataFlow for this environment.
  Environment:
    type: object
    description: The DataFlow view of a CDP environment.
    required:
      - crn
      - name
      - cloudPlatform
      - region
      - deploymentCount
      - minK8sNodeCount
      - maxK8sNodeCount
      - status
    properties:
      crn:
        type: string
        description: The environment CRN.
      name:
        type: string
        description: The environment name.
      cloudPlatform:
        type: string
        description: The cloud platform of the environment.
      region:
        type: string
        description: The region of the environment.
      deploymentCount:
        type: integer
        format: int32
        description: The deployment count.
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of Kubernetes nodes that need to be provisioned in the environment
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that environment may scale up under high-demand situations
      status:
        description: The DataFlow status of the environment.
        $ref: '#/definitions/EnvironmentStatus'
      k8sNodeCount:
        type: integer
        format: int32
        description: The number of kubernetes nodes currently in use by DataFlow for this environment.
      instanceType:
        type: string
        description: The instance type of the kubernetes nodes currently in use by DataFlow for this environment.
      dfLocalUrl:
        type: string
        description: The URL of the environment local DataFlow application.
      authorizedIpRanges:
        type: array
        items:
          type: string
        description: The authorized IP Ranges
      activeWarningAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as a warning
      activeErrorAlertCount:
        type: integer
        format: int64
        description: Current count of active alerts classified as an error
      clusterId:
        type: string
        description: Cluster id of the environment, if enabled
  ListEnvironmentsRequest:
    type: object
    description: Request object for the ListEnvironments method.
    properties:
      sorts:
        type: array
        items:
          type: string
        description: The sort criteria
      pageSize:
        type: integer
        format: int32
        minimum: 20
        maximum: 100
        x-paging-page-size: true
        description: The page size.
      pageToken:
        type: string
        x-paging-input-token: true
        description: The page token.
  ListEnvironmentsResponse:
    type: object
    description: Response object for the ListEnvironments method.
    properties:
      environments:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/EnvironmentSummary'
        description: The environments.
      nextPageToken:
        type: string
        x-paging-output-token: true
        description: The page token for requesting the next page of results.
  ListTargetEnvironmentsForNewDeploymentsRequest:
    type: object
    description: Request object for the ListTargetEnvironmentsForNewDeploymentsRequest method.
  ListTargetEnvironmentsForNewDeploymentsResponse:
    type: object
    description: Response object for the ListTargetEnvironmentsForNewDeploymentsRequest method.
    properties:
      environments:
        type: array
        items:
          $ref: '#/definitions/EnvironmentSummary'
        description: The environments.
  GetEnvironmentRequest:
    type: object
    description: Request object for the GetEnvironment method.
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN
  GetEnvironmentResponse:
    type: object
    description: Response object for the GetEnvironment method.
    properties:
      environment:
        description: The environment
        $ref: '#/definitions/Environment'
  EnableEnvironmentRequest:
    type: object
    description: Request object for EnableEnvironment
    required:
      - crn
      - minK8sNodeCount
      - maxK8sNodeCount
      - usePublicLoadBalancer
    properties:
      crn:
        type: string
        description: The environment CRN
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of kubernetes nodes needed for the environment.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that environment may scale up under high-demand situations.
      usePublicLoadBalancer:
        type: boolean
        description: Indicates whether or not to use a public load balancer when deploying dependencies stack, such as Nginx Ingress Controller.
      authorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP ranges authorized to connect to the Kubernetes API server.
  EnableEnvironmentResponse:
    type: object
    description: Response object for EnableEnvironment
    properties:
      environment:
        description: The environment
        $ref: '#/definitions/Environment'
  DisableEnvironmentRequest:
    type: object
    description: Request object for DisableEnvironment
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN.
      persist:
        type: boolean
        description: Whether or not to retain the database records of related entities
  DisableEnvironmentResponse:
    type: object
    description: Response object for DisableEnvironment
    properties:
      status:
        description: The DataFlow status of the environment.
        $ref: '#/definitions/EnvironmentStatus'
  UpdateEnvironmentRequest:
    type: object
    description: Request object for UpdateEnvironment
    required:
      - crn
      - minK8sNodeCount
      - maxK8sNodeCount
    properties:
      crn:
        type: string
        description: The environment CRN.
      minK8sNodeCount:
        type: integer
        format: int32
        description: The minimum number of kubernetes nodes needed for the environment.
      maxK8sNodeCount:
        type: integer
        format: int32
        description: The maximum number of kubernetes nodes that environment may scale up under high-demand situations.
      authorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP ranges authorized to connect to the Kubernetes API server.
  UpdateEnvironmentResponse:
    type: object
    description: Response object for UpdateEnvironment
    properties:
      environment:
        description: The environment.
        $ref: '#/definitions/Environment'
  GetActiveAlertsForEnvironmentRequest:
    type: object
    description: Request object for GetActiveAlertsForEnvironment
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN
      sort:
        type: string
        description: Sort criteria
  GetActiveAlertsForEnvironmentResponse:
    type: object
    description: Response object for GetActiveAlertsForEnvironment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified environment
  GetEventHistoryForEnvironmentRequest:
    type: object
    description: Request object for GetEventHistoryForEnvironment
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN
      rows:
        type: integer
        format: int32
        description: Max number of rows to return
      timestampFrom:
        type: integer
        format: int32
        description: Timestamp from when to get events prior
      filters:
        type: array
        items:
          type: string
        description: Filter criteria
  GetEventHistoryForEnvironmentResponse:
    type: object
    description: Response object for GetEventHistoryForEnvironment
    properties:
      eventSummaries:
        type: array
        items:
          $ref: '#/definitions/EventSummary'
        description: The events for the specified environment
  GetEventDetailForEnvironmentRequest:
    type: object
    description: Request object for GetEventDetailForEnvironment
    required:
      - environmentCrn
      - eventCrn
    properties:
      environmentCrn:
        type: string
        description: The environment CRN
      eventCrn:
        type: string
        description: The event CRN
  GetEventDetailForEnvironmentResponse:
    type: object
    description: Response object for GetEventDetailForEnvironment
    properties:
      event:
        description: The events for the specified environment
        $ref: '#/definitions/Event'
  DeleteEnvironmentRequest:
    type: object
    description: Request object for DeleteEnvironment
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN.
  DeleteEnvironmentResponse:
    type: object
    description: Response object for DeleteEnvironment
  GrantUserKubernetesAccessRequest:
    type: object
    description: The request for granting access
    required:
      - crn
      - cloudUserId
    properties:
      crn:
        type: string
        description: The environment CRN.
      cloudUserId:
        type: string
        description: The user to grant remote access for
  GrantUserKubernetesAccessResponse:
    type: object
    description: The response for granting access
    required:
      - cloudUserId
    properties:
      cloudUserId:
        type: string
        description: The cloudUserId for the newly granted user
  GetUserKubernetesAccessListRequest:
    type: object
    description: The request for getting the access list for a cluster
    required:
      - crn
    properties:
      crn:
        type: string
        description: The environment CRN.
  GetUserKubernetesAccessListResponse:
    type: object
    description: The response for getting the access list for a cluster
    properties:
      cloudUserIds:
        type: array
        items:
          type: string
        description: The cloudUserId for the newly granted user
  RevokeUserKubernetesAccessRequest:
    type: object
    description: The request for revoking access
    required:
      - crn
      - cloudUserId
    properties:
      crn:
        type: string
        description: The environment CRN.
      cloudUserId:
        type: string
        description: The user to revoke remote access for
  RevokeUserKubernetesAccessResponse:
    type: object
    description: The response for revoking access
    required:
      - cloudUserId
    properties:
      cloudUserId:
        type: string
        description: The cloudUserId of the newly revoked user
  GetNotificationsRequest:
    type: object
    description: The request for retrieving notifications
    required:
      - timestampAfter
    properties:
      timestampAfter:
        type: integer
        format: int64
        description: Timestamp from when to get notifications since
  GetNotificationsResponse:
    type: object
    description: The response for retrieving notifications
    properties:
      notifications:
        type: array
        items:
          $ref: '#/definitions/Notification'
        description: The notifications
  Notification:
    type: object
    description: A notification for an event
    required:
      - name
      - description
      - severity
      - referenceId
      - referenceType
      - username
      - eventId
      - timestamp
    properties:
      name:
        type: string
        description: The name of the notification
      description:
        type: string
        description: The description of the notification
      severity:
        type: string
        description: The severity of the notification
      referenceId:
        type: string
        description: The id of the component referenced by this notification
      referenceType:
        type: string
        description: The type of component referenced by this notification
      username:
        type: string
        description: The user associated with the notification
      eventId:
        type: string
        description: The id of the event that triggered this notification
      timestamp:
        type: integer
        format: int64
        description: The timestamp of the event that triggered this notification
x-audit: true
x-audit-entitlement: AUDIT_API_EVENT_SUBMISSION_DF_API
