x-generated: Automatically generated by CDP protoc plugin. Do not edit manually.
swagger: '2.0'
x-endpoint-name: compute
x-products: CDP
x-form-factors: public,private
x-cdp-releases: PUBLIC
info:
  version: 0.9.75 (BETA)
  title: Cloudera Compute Service
  license:
    name: Apache 2.0
  description: Defining service of compute public API service
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/compute/describeDeployment:
    post:
      summary: Describes a deployment
      description: Gets a single deployment along with its extended history. This can also include all of the known templates.
      operationId: describeDeployment
      x-entitlement: COMPUTE_SECURITY_UPDATES
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/compute/listClusters:
    post:
      summary: List compute clusters
      description: List all compute clusters in a CDP Environment
      operationId: listClusters
      x-entitlement: COMPUTE_API
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClustersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListClustersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/compute/listDeployments:
    post:
      summary: List deployments in the cluster.
      description: Lists the helm charts that are available for deployment or have already been deployed in this cluster.
      operationId: listDeployments
      x-entitlement: COMPUTE_SECURITY_UPDATES
      x-form-factors: public
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: false
  /api/v1/compute/rollbackDeployment:
    post:
      summary: Rollbacks a deployment to a previous revision
      description: This will perform a rollback.
      operationId: rollbackDeployment
      x-entitlement: COMPUTE_SECURITY_UPDATES
      x-form-factors: public
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RollbackDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RollbackDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/compute/updateCluster:
    post:
      summary: Update cluster
      description: Updates compute cluster.
      operationId: updateCluster
      x-entitlement: COMPUTE_SECURITY_UPDATES
      x-form-factors: public
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
  /api/v1/compute/upgradeDeployment:
    post:
      summary: Upgrades a deployment to a different chart.
      description: Upgrades a deployment to a different chart.
      operationId: upgradeDeployment
      x-entitlement: COMPUTE_SECURITY_UPDATES
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeDeploymentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeDeploymentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
      x-mutating: true
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  EnvCloudProvider:
    type: string
    description: "object representing CDP Environment cloud provider type\n `AWS` - CDP Environment installed in AWS `AZURE` - CDP Environment installed in Azure `OPENSHIFT` - CDP Environment installed as on-premise instalation using CDP DC services in base cluster"
    enum:
      - AWS
      - AZURE
      - OPENSHIFT
  ComputePlatform:
    type: string
    description: "object representing CDP Compute Cluster Platform provider\n `OPENSHIFT` - OpenShift Container Platform cluster as compute platform (private cloud only). `EKS` - EKS cluster as compute platform `AKS` - AKS cluster as compute platform `RKE` - Rancher RKE as compute platform (private cloud only)."
    enum:
      - OPENSHIFT
      - EKS
      - AKS
      - RKE
  ComputeClusterType:
    type: string
    description: "Object representing compute cluster types.\n `Dedicated` - value representing dedicated compute cluster `Shared` - value representing shared compute cluster"
    enum:
      - Dedicated
      - Shared
  ComputeClusterOwner:
    type: object
    description: Compute cluster owner structure.
    properties:
      email:
        type: string
        description: Owner's email.
      firstName:
        type: string
        description: Owner's firstname.
      lastName:
        type: string
        description: Owner's lastname.
      userId:
        type: string
        description: Owner's user ID.
      accountId:
        type: string
        description: Owner's account ID.
      crn:
        type: string
        description: Owner's actor CRN.
    x-form-factors: public
  CommonImageCatalogResp:
    type: object
    description: Image catalog response structure.
    properties:
      crn:
        type: string
        description: The catalog CRN (either CRN or name is required).
      name:
        type: string
        description: The catalog name (either CRN or name is required).
    x-form-factors: public
  CommonStorageSpecResp:
    type: object
    description: Storage spec response structure.
    properties:
      csiEnabled:
        type: boolean
        description: Flag to enable CSI (Container Storage Interface). It further sets specific inline cloud formation policies required for CSI.
    x-form-factors: public
  ListClustersRequest:
    type: object
    description: Request object to list clusters.
    properties:
      envNameOrCrn:
        type: string
        description: Environment name or crn.
      workloads:
        type: string
        description: Workloads for workload filtering.
        x-form-factors: public
      status:
        type: string
        description: Cluster Status for status filtering.
        x-form-factors: public
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page. Default is 100.
        x-form-factors: public
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response. 1 or empty for first page.
        x-form-factors: public
  ListClusterItem:
    type: object
    description: List clusters item structure.
    properties:
      envName:
        type: string
        description: CDP environment name.
      envCloudProvider:
        description: CDP environment cloud provider.
        $ref: '#/definitions/EnvCloudProvider'
      clusterName:
        type: string
        description: Compute cluster name.
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      status:
        type: string
        description: Compute cluster status.
      computePlatform:
        description: Compute cluster platform provider.
        $ref: '#/definitions/ComputePlatform'
      computePlatformVersion:
        type: string
        description: Compute cluster platform version.
        x-form-factors: private
      kubernetesVersion:
        type: string
        description: Kubernetes version.
      clusterSize:
        type: integer
        format: int32
        description: Number of nodes in the cluster.
        x-form-factors: private
      clusterId:
        type: string
        description: Compute cluster ID.
      envCrn:
        type: string
        description: CDP environment CRN.
      clusterType:
        description: Compute cluster type.
        $ref: '#/definitions/ComputeClusterType'
        x-form-factors: public
      creationTime:
        type: string
        description: Compute cluster creation time in ISO format.
        x-form-factors: public
      deletionTime:
        type: string
        description: Compute cluster deletion time in ISO format.
        x-form-factors: public
      updateTime:
        type: string
        description: Compute cluster update time in ISO format.
        x-form-factors: public
      clusterStateVersion:
        type: integer
        format: int32
        description: Cluster state version.
        x-form-factors: public
      clusterOwner:
        description: Cluster owner.
        $ref: '#/definitions/ComputeClusterOwner'
        x-form-factors: public
      region:
        type: string
        description: Region.
        x-form-factors: public
      message:
        type: string
        description: Message with additional details about the cluster status.
        x-form-factors: public
      account:
        type: string
        description: / CDP account ID.
        x-form-factors: public
      availableUpgrades:
        type: array
        items:
          type: string
        description: List of available kubernetes upgrades.
        x-form-factors: public
      imageCatalog:
        description: The image catalog details.
        $ref: '#/definitions/CommonImageCatalogResp'
        x-form-factors: public
      storage:
        description: The storage specifications.
        $ref: '#/definitions/CommonStorageSpecResp'
        x-form-factors: public
      labels:
        type: object
        description: Map of labels associated with this cluster.
        additionalProperties:
          type: string
  ListClustersResponse:
    type: object
    description: List clusters response.
    properties:
      clusters:
        type: array
        x-paging-result: true
        items:
          $ref: '#/definitions/ListClusterItem'
        description: Array of CDP compute clusters.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If not present, there are no additional results.
        x-form-factors: public
  UpdateClusterRequest:
    type: object
    description: Update compute cluster request.
    required:
      - clusterCrn
      - spec
      - clusterStateVersion
    properties:
      clusterCrn:
        type: string
        description: Compute Cluster CRN.
      spec:
        description: Spec for updating compute cluster.
        $ref: '#/definitions/CommonUpdateClusterSpec'
      clusterStateVersion:
        type: integer
        format: int64
        description: Current cluster state version of the compute cluster being updated.
      metadata:
        description: Compute cluster update metadata.
        $ref: '#/definitions/CommonUpdateClusterMetadata'
      skipValidation:
        type: boolean
        description: Whether to skip validation.
  UpdateClusterResponse:
    type: object
    description: Update compute cluster response.
    properties:
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      clusterStatus:
        description: Status of the compute cluster.
        $ref: '#/definitions/CommonStatusMessage'
      uri:
        type: string
        description: Uniform resource identifier of the compute cluster.
      validationResponse:
        description: Pre-flight validation check response. Only given on a validation failure and `skipValidation` is false.
        $ref: '#/definitions/ValidationResponse'
  CommonUpdateClusterSpec:
    type: object
    description: Compute cluster update spec.
    properties:
      deployments:
        description: Update deployments on the compute cluster.
        $ref: '#/definitions/CommonUpdateClusterDeployments'
      helm:
        description: Update Helm on compute the compute cluster.
        $ref: '#/definitions/CommonHelm'
      security:
        description: Update security settings for the compute cluster.
        $ref: '#/definitions/CommonSecurity'
      storage:
        description: Update storage settings for the compute cluster.
        $ref: '#/definitions/CommonStorageSpec'
      imageCatalog:
        description: Update image catalog for the compute cluster.
        $ref: '#/definitions/CommonImageCatalog'
      refreshInstanceGroups:
        type: boolean
        description: Whether to refresh nodes of instance groups belonging to the compute cluster.
  CommonUpdateClusterMetadata:
    type: object
    description: Update cluster metadata structure.
    properties:
      description:
        type: string
        description: Description of compute cluster update.
  CommonUpdateClusterDeployments:
    type: object
    description: Update cluster deployments structure.
    properties:
      autoscaler:
        description: Autoscaler.
        $ref: '#/definitions/CommonAutoscaler'
  CommonHelm:
    type: object
    description: Helm structure.
    properties:
      version:
        type: string
        description: Helm version to be upgraded to.
  CommonApiServer:
    type: object
    description: API server request structure.
    properties:
      authorizedIpRanges:
        type: array
        items:
          type: string
        description: An array of IPv4 CIDR blocks.
      enabled:
        type: boolean
        description: Flag to enable whitelist of IP Ranges (CIDR block) for public access to the kubernetes API server.
  CommonSecretEncryption:
    type: object
    description: Secret encryption request structure.
    properties:
      customerKmsKeyArn:
        type: string
        description: The KMS key ARN used.
        x-sensitive: true
      enabled:
        type: boolean
        description: Flag to enable secret encryption.
  CommonVolumeEncryption:
    type: object
    description: Volume encryption request structure.
    properties:
      customerKmsKeyArn:
        type: string
        description: The KMS key ARN used.
        x-sensitive: true
  CommonSecurity:
    type: object
    description: Security request structure.
    properties:
      apiServer:
        description: API server.
        $ref: '#/definitions/CommonApiServer'
      secretEncryption:
        description: Secret encryption.
        $ref: '#/definitions/CommonSecretEncryption'
      volumeEncryption:
        description: Volume encryption.
        $ref: '#/definitions/CommonVolumeEncryption'
      private:
        type: boolean
        description: Flag set to true for a private cluster with API Server having internal IP addressees.
  CommonAutoscaler:
    type: object
    description: Autoscaler request structure.
    properties:
      scaleDownDelayAfterAdd:
        type: string
        description: How long after scale up that scale down evaluation resumes. (Azure/AWS Support).
      scaleDownDelayAfterDelete:
        type: string
        description: How long after node deletion that scale down evaluation resumes, defaults to scanInterval. (Azure/AWS Support).
      scaleDownDelayAfterFailure:
        type: string
        description: How long after scale down failure that scale down evaluation resumes. (Azure/AWS Support).
      scaleDownEnabled:
        type: boolean
        description: Scale down flag. (AWS Support).
      scaleDownNonEmptyCandidatesCount:
        type: integer
        format: int32
        description: Maximum number of non empty nodes considered in one iteration as candidates for scale down with drain. Lower value means better CA responsiveness but possible slower scale down latency. Higher value can affect CA performance with big clusters (100s of nodes). Set to non positive value to turn this heuristic off - CA will not limit the number of nodes it considers. (AWS Support).
      scaleDownUnneededTime:
        type: string
        description: How long a node should be unneeded before it is eligible for scale down. (Azure/AWS Support).
      scaleDownUtilizationThreshold:
        type: number
        format: double
        description: Node utilization level, defined as the sum of requested resources divided by capacity,. below which a node can be considered for scale down. (Azure/AWS Support).
      scanInterval:
        type: string
        description: Scan interval. (Azure/AWS Support).
      skipNodesWithLocalStorage:
        type: boolean
        description: Skip nodes with local storage flag. (AWS Support).
      skipNodesWithSystemPods:
        type: boolean
        description: Skip nodes with system pods. (AWS Support).
      maxGracefulTerminationSec:
        type: integer
        format: int64
        description: Maximum number of seconds CA waits for pod termination when trying to scale down a node. (Azure Support).
      scaleDownUnreadyTime:
        type: string
        description: How long an unready node should be unneeded before it is eligible for scale down. (Azure Support).
  CommonImageCatalog:
    type: object
    description: Image catalog request structure.
    properties:
      crn:
        type: string
        description: The catalog CRN (either CRN or name is required).
      name:
        type: string
        description: The catalog name (either CRN or name is required).
  CommonStorageSpec:
    type: object
    description: Storage spec request structure.
    properties:
      csiEnabled:
        type: boolean
        description: Flag to enable Container Storage Interface (CSI). It further sets specific inline cloud formation policies required for CSI.
  CommonStatusMessage:
    type: object
    description: Cluster status structure.
    properties:
      message:
        type: string
        description: Message.
      status:
        type: string
        description: Status.
  ValidationSummary:
    type: object
    description: Validation summary structure.
    properties:
      passed:
        type: integer
        format: int32
        description: Total number of passed validations.
      warning:
        type: integer
        format: int32
        description: Total number of validations that passed but have warnings associated with them.
      failed:
        type: integer
        format: int32
        description: Total number of failed validations.
      skipped:
        type: integer
        format: int32
        description: Total number of skipped validations.
      total:
        type: integer
        format: int32
        description: Total number of validations.
  ValidationResult:
    type: object
    description: Validation result structure.
    properties:
      name:
        type: string
        description: Name.
      description:
        type: string
        description: Description.
      category:
        type: string
        description: Validation check categories such as COMMON, ENTITLEMENTS, CONTROL_PLANE, NETWORK, or DEPLOYMENT. New values may be added in the future.
      status:
        type: string
        description: Validation check status such as PASSED, FAILED, or SKIPPED. New values may be added in the future.
      message:
        type: string
        description: A short, human-readable message that describes the end result of the validation.
      detailedMessage:
        type: string
        description: A supporting message which contains additional details, such as subnet names, instance types, etc.
      duration:
        type: string
        description: Time taken to get the end result of the validation in a human-readable time format.
  ValidationResponse:
    type: object
    description: Pre-flight validation check response structure.
    properties:
      result:
        type: string
        description: Validation result.
      summary:
        description: Numerical summary of the validations.
        $ref: '#/definitions/ValidationSummary'
      message:
        type: string
        description: A message describing end result of the validations.
      validations:
        type: array
        items:
          $ref: '#/definitions/ValidationResult'
        description: The list of detailed validation result.
  DescribeDeploymentRequest:
    type: object
    description: Request structure for describing a deployment.
    required:
      - clusterCrn
      - namespace
      - name
    properties:
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      namespace:
        type: string
        description: The namespace of the deployment.
      name:
        type: string
        description: The name of the deployment.
  Chart:
    type: object
    description: Chart structure.
    properties:
      applicationVersion:
        type: string
        description: The version (usually of the images) of the components being deployed.
      deploymentVersion:
        type: string
        description: The version of this chart (which is not the version of the components being deployed).
      description:
        type: string
        description: The chart description.
      name:
        type: string
        description: The chart name.
  AvailableDeploymentUpgrade:
    type: object
    description: Available deployment upgrade structure.
    properties:
      applicationVersion:
        type: string
        description: The version of the components which would be installed from this deployment.
      deploymentVersion:
        type: string
        description: The version of the deployment that is available to upgrade to.
  Deployment:
    type: object
    description: Deployment structure.
    properties:
      name:
        type: string
        description: The name of the deployment.
      namespace:
        type: string
        description: The namespace of the deployment.
      revision:
        type: integer
        format: int32
        description: Helm revision.
      liftieManaged:
        type: boolean
        description: True if Liftie is managing this deployment.
      chart:
        description: Chart that the deployment was created from.
        $ref: '#/definitions/Chart'
      status:
        type: string
        description: Status of the deployment. Currently supported values are UNKNOWN, DEPLOYED, UNINSTALLED, SUPERSEDED, and FAILED. New values may be added in the future.
      upgrades:
        type: array
        items:
          $ref: '#/definitions/AvailableDeploymentUpgrade'
        description: Any upgrades available for this deployment.
  History:
    type: object
    description: History structure.
    properties:
      revision:
        type: integer
        format: int32
        description: Helm revision.
      status:
        type: string
        description: Status of the deployment. Currently supported values are UNKNOWN, DEPLOYED, UNINSTALLED, SUPERSEDED, and FAILED. New values may be added in the future.
      chart:
        description: Chart that the deployment was created from.
        $ref: '#/definitions/Chart'
  DescribeDeploymentResponse:
    type: object
    description: Response structure for describing a deployment.
    properties:
      deployment:
        description: Deployment details.
        $ref: '#/definitions/Deployment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
        description: History of the deployment.
      overrides:
        type: string
        description: JSON overrides for the deployment's properties.
  UpgradeDeploymentRequest:
    type: object
    description: Request structure for upgrading a deployment.
    required:
      - clusterCrn
      - namespace
      - name
    properties:
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      namespace:
        type: string
        description: The namespace of the deployment.
      name:
        type: string
        description: The name of the deployment.
      chartVersion:
        type: string
        description: The version of the deployment to upgrade to. Defaults to latest version.
      overrides:
        type: string
        description: JSON overrides for the deployment's properties.
  UpgradeDeploymentResponse:
    type: object
    description: Response structure for upgrading a deployment.
    properties:
      name:
        type: string
        description: The name of the deployment.
      namespace:
        type: string
        description: The namespace of the deployment.
      revision:
        type: integer
        format: int32
        description: Helm revision.
      message:
        type: string
        description: A message returned about the status of the upgrade operation.
      status:
        type: string
        description: Status of the deployment. Currently supported values are UNKNOWN, DEPLOYED, UNINSTALLED, SUPERSEDED, and FAILED. New values may be added in the future.
      chart:
        description: Chart that the deployment was created from.
        $ref: '#/definitions/Chart'
  RollbackDeploymentRequest:
    type: object
    description: Request structure to rollback a deployment.
    required:
      - clusterCrn
      - namespace
      - name
    properties:
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      namespace:
        type: string
        description: The namespace of the deployment.
      name:
        type: string
        description: The name of the deployment.
      revision:
        type: integer
        format: int32
        description: The revision of the deployment to rollback to. Defaults to previous revision.
  RollbackDeploymentResponse:
    type: object
    description: Response structure to rollback a deployment.
    properties:
      message:
        type: string
        description: A message returned about the status of the rollback operation.
  ListDeploymentsRequest:
    type: object
    description: Request structure to list deployments in the cluster.
    required:
      - clusterCrn
    properties:
      clusterCrn:
        type: string
        description: Compute cluster CRN.
      namespace:
        type: string
        description: The namespace of the deployment. Lists deployments in all namespaces if not specified.
  ListDeploymentsResponse:
    type: object
    description: Response structure to list deployments in the cluster.
    properties:
      availableCharts:
        type: array
        items:
          $ref: '#/definitions/Chart'
        description: Array of available charts.
      unavailableCharts:
        type: array
        items:
          $ref: '#/definitions/Chart'
        description: Array of unavailable charts.
      installedDeployments:
        type: array
        items:
          $ref: '#/definitions/Deployment'
        description: Array of installed deployments.
x-audit: true
